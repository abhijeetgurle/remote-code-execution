import Head from "next/head";
import styles from "@/styles/Home.module.css";
import Editor from "react-simple-code-editor";
import { useEffect, useState } from "react";
import { highlight, languages } from "prismjs/components/prism-core";
import "prismjs/components/prism-clike";
import "prismjs/components/prism-javascript";
import "prismjs/themes/prism.css";
import axios from "axios";
import "antd/dist/reset.css";
import { Button, Spin, Tabs } from "antd";
import type { TabsProps } from "antd";

const items: TabsProps["items"] = [
  {
    key: "1",
    label: `Problem Statement`,
    children: (
      <div>
        <h3>Add 2 Numbers</h3>
        <div>
          Write a code for adding 2 integer numbers. Complete the add function
          given. The function accepts 2 parameters a & b as input & expects
          their addition as the returned response.
        </div>
      </div>
    ),
  },
];

export default function Home() {
  const [code, setCode] = useState(
    `function add(a, b) {\n // Write your code here... \n\n}`
  );
  const [output, setOutput] = useState("");
  const [jobId, setJobId] = useState("");
  const [jobStatus, setJobStatus] = useState("");

  const runCodeClickHandler = () => {
    axios
      .post("http://localhost:8000/code", {
        code: code,
      })
      .then((res) => {
        setJobId(res.data.data.jobId);
        setJobStatus("PROCESSING");
      });
  };

  useEffect(() => {
    if (jobId) {
      const interval = setInterval(() => {
        axios.get(`http://localhost:8000/job/${jobId}`).then((res) => {
          setJobStatus(res.data.data.jobStatus);
          if (res.data.data.jobStatus !== "PROCESSING") {
            clearInterval(interval);
          }
          setOutput(res.data.data.jobOutput);
        });
      }, 3000);
    }
  }, [jobId]);

  const getMessageToDisplay = () => {
    if (jobStatus === "SUCCESS") {
      return "Congratulations!!! Your code is running on all test cases";
    } else if (jobStatus === "MISMATCHED") {
      return "Test cases are failing! Please check your code";
    } else if (jobStatus === "PROCESSING") {
      return "Code Is Running";
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.problem}>
          <Tabs defaultActiveKey="1" items={items} />
        </div>
        <div className={styles.code}>
          <Editor
            value={code}
            onValueChange={(code) => setCode(code)}
            highlight={(code) => highlight(code, languages.js)}
            padding={10}
            style={{
              fontFamily: '"Fira code", "Fira Mono", monospace',
              fontSize: 14,
              width: "100%",
              height: "70%",
              border: "1px solid gray",
              borderRadius: "5px",
              backgroundColor: "black",
              color: "white",
            }}
          />
          <Button
            type="primary"
            className={styles.btn}
            onClick={runCodeClickHandler}
          >
            Submit Code
          </Button>
          <div className={styles.output}>
            <h3>Output</h3>
            {jobStatus === "PROCESSING" ? (
              <div className={styles.spinnerContainer}>
                <Spin />
              </div>
            ) : (
              <div>{getMessageToDisplay()}</div>
            )}
          </div>
        </div>
      </main>
    </>
  );
}
